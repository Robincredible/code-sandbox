{"version":3,"sources":["Components/UI/card.js","Images/image-jeremy.png","Components/profile.js","Images/icon-ellipsis.svg","Components/stats.js","Components/period.js","Components/dashboard.js","App.js","index.js"],"names":["Card","props","classNames","className","_jsx","children","Profile","_jsxs","src","image","defaultImage","name","Stats","string","timeframeSelected","selected","toLowerCase","title","replace","class","ellipsis","timeframes","current","previous","Period","_useState","useState","_useState2","_slicedToArray","setSelected","_useState3","_useState4","active","setActive","useEffect","selectTime","clickHandler","e","id","value","currentTarget","getAttribute","selectedValue","map","timeframe","text","onClick","Dashboard","timeframesData","data","item","App","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"uyCAOeA,EALF,SAACC,GACZ,IAAMC,EAAa,SAAWD,EAAME,WAAa,IACjD,OAAOC,cAAA,OAAKD,UAAWD,EAAWG,SAAEJ,EAAMI,UAC5C,ECLe,MAA0B,yCCc1BC,EAVC,SAACL,GACf,OACEM,eAACP,EAAI,CAACG,UAAU,UAASE,SAAA,CACvBD,cAAA,OAAKI,IAAKP,EAAMQ,OAASC,IACzBN,cAAA,KAAAC,SAAG,eACHD,cAAA,MAAID,UAAU,OAAME,SAAEJ,EAAMU,MAAQ,oBAG1C,ECZe,MAA0B,0CC4B1BC,G,MAvBD,SAACX,GACb,IAEwBY,EAFlBC,EAAoBb,EAAMc,SAASC,cAMzC,OACET,eAACP,EAAI,CAACG,UAAW,UALKU,EAKqBZ,EAAMgB,MAAMD,cAJhDH,EAAOK,QAAQ,OAAQ,KAAKF,eAImCX,SAAA,CACpEE,eAAA,OAAKY,MAAM,aAAYd,SAAA,CACrBD,cAAA,MAAID,UAAU,aAAYE,SAAEJ,EAAMgB,QAClCb,cAAA,OAAKD,UAAU,WAAWK,IAAKY,OAEjCb,eAAA,MAAIJ,UAAU,aAAYE,SAAA,CACvBJ,EAAMoB,WAAWP,GAAmBQ,QAAQ,SAE/Cf,eAAA,MAAIJ,UAAU,kBAAiBE,SAAA,CAAC,eACjBJ,EAAMoB,WAAWP,GAAmBS,SAAS,cAIlE,GCoBeC,G,MAzCA,SAACvB,GACd,IAAAwB,EAAgCC,mBAASzB,EAAMc,UAASY,EAAAC,YAAAH,EAAA,GAAjDV,EAAQY,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAA4BJ,mBAASX,GAASgB,EAAAH,YAAAE,EAAA,GAAvCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBV,EAAapB,EAAMoB,WAGzBa,qBAAU,WACRL,EAAYd,GACZd,EAAMkC,WAAWpB,EACnB,GAAG,CAACA,IAEJ,IAIMqB,EAAe,SAACC,GACpB,IAL2BC,EAKrBC,EAAQF,EAAEG,cAAcC,aAAa,aACrCC,EAAgBL,EAAEG,cAAcC,aAAa,aACnDZ,EAAYa,GANZT,EAAUD,KADiBM,EAQPC,GAPMD,EAAKvB,EAQjC,EAEA,OACEX,cAACJ,EAAI,CAACG,UAAU,SAAQE,SACrBgB,EAAWsB,KAAI,SAACC,GACf,OACExC,cAAA,KAEEkC,GAAIM,EAAUN,GACd,YAAWM,EAAUC,KACrB1C,UAAW6B,GAAUY,EAAUC,KAAO,SAAW,GACjDC,QAASV,EAAa/B,SAErBuC,EAAUC,MANND,EAAUC,KASrB,KAGN,GCLeE,EA9BG,SAAC9C,GACjB,IAAAwB,EAAgCC,mBAAS,UAASC,EAAAC,YAAAH,EAAA,GAA3CV,EAAQY,EAAA,GAAEE,EAAWF,EAAA,GAG5B,OACEpB,eAAA,OAAKJ,UAAU,eAAcE,SAAA,CAC3BE,eAAA,OAAKJ,UAAU,oBAAmBE,SAAA,CAChCD,cAACE,EAAO,CAACK,KAAMV,EAAMU,OACrBP,cAACoB,EAAM,CACLH,WAAY2B,EACZb,WAAYN,EACZd,SAAUA,OAGdX,cAAA,OAAKD,UAAU,uBAAsBE,SAClC4C,EAAKN,KAAI,SAACO,GACT,OACE9C,cAACQ,EAAK,CACJK,MAAOiC,EAAKjC,MACZI,WAAY6B,EAAK7B,WACjBN,SAAUA,GACLmC,EAAKjC,MAGhB,QAIR,EClCe,SAASkC,IACtB,OACE/C,cAAA,OAAKD,UAAU,MAAKE,SAClBD,cAAC2C,EAAS,KAGhB,CCJA,IAAMK,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACHpD,cAACqD,aAAU,CAAApD,SACTD,cAAC+C,EAAG,M","file":"static/js/main.936f7159.chunk.js","sourcesContent":["import \"./card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classNames = \"card \" + (props.className || \"\");\r\n  return <div className={classNames}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/image-jeremy.71cd41f1.png\";","import \"./profile.css\";\r\nimport Card from \"./UI/card\";\r\nimport defaultImage from \"../Images/image-jeremy.png\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <Card className=\"profile\">\r\n      <img src={props.image || defaultImage} />\r\n      <p>Report for</p>\r\n      <h1 className=\"name\">{props.name || \"Jeremy Robson\"}</h1>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/icon-ellipsis.a57a4ac8.svg\";","import Card from \"./UI/card\";\r\nimport ellipsis from \"../Images/icon-ellipsis.svg\";\r\n\r\nimport \"./stats.css\";\r\n\r\nconst Stats = (props) => {\r\n  const timeframeSelected = props.selected.toLowerCase();\r\n\r\n  const sanitizedTitle = (string) => {\r\n    return string.replace(/\\W+/g, \"-\").toLowerCase();\r\n  };\r\n\r\n  return (\r\n    <Card className={\"stats \" + sanitizedTitle(props.title.toLowerCase())}>\r\n      <div class=\"flex-title\">\r\n        <h1 className=\"stat-title\">{props.title}</h1>\r\n        <img className=\"ellipsis\" src={ellipsis} />\r\n      </div>\r\n      <h2 className=\"stat-hours\">\r\n        {props.timeframes[timeframeSelected].current}hrs\r\n      </h2>\r\n      <h3 className=\"stat-hours-prev\">\r\n        Last Week - {props.timeframes[timeframeSelected].previous} Hours\r\n      </h3>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport Card from \"./UI/card\";\r\nimport \"./period.css\";\r\n\r\nconst Period = (props) => {\r\n  const [selected, setSelected] = useState(props.selected);\r\n  const [active, setActive] = useState(selected);\r\n  const timeframes = props.timeframes;\r\n\r\n  /* Show the current updated state and runs before render */\r\n  useEffect(() => {\r\n    setSelected(selected);\r\n    props.selectTime(selected); //lift state up to parent component\r\n  }, [selected]);\r\n\r\n  const updateActiveElement = (id) => {\r\n    setActive(active !== id ? id : selected);\r\n  };\r\n\r\n  const clickHandler = (e) => {\r\n    const value = e.currentTarget.getAttribute(\"data-text\");\r\n    const selectedValue = e.currentTarget.getAttribute(\"data-text\");\r\n    setSelected(selectedValue); // choosing an item updates the state\r\n    updateActiveElement(value); // update the state with the id of the active element\r\n  };\r\n\r\n  return (\r\n    <Card className=\"period\">\r\n      {timeframes.map((timeframe) => {\r\n        return (\r\n          <p\r\n            key={timeframe.text}\r\n            id={timeframe.id}\r\n            data-text={timeframe.text}\r\n            className={active == timeframe.text ? \"active\" : \"\"}\r\n            onClick={clickHandler}\r\n          >\r\n            {timeframe.text}\r\n          </p>\r\n        );\r\n      })}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Period;\r\n","import { useState } from \"react\";\r\n\r\nimport \"./dashboard.css\";\r\nimport data from \"../data.json\";\r\nimport timeframesData from \"../timeframes.json\"; // created a test json so we can scale the items if needed and recieve json data from APIs\r\nimport Profile from \"./profile\";\r\nimport Stats from \"./stats\";\r\nimport Period from \"./period\";\r\n\r\nconst Dashboard = (props) => {\r\n  const [selected, setSelected] = useState(\"Weekly\");\r\n  const timeframes = [\"Daily\", \"Weekly\", \"Monthly\"]; //test data\r\n\r\n  return (\r\n    <div className=\"flex-display\">\r\n      <div className=\"profile-container\">\r\n        <Profile name={props.name} />\r\n        <Period\r\n          timeframes={timeframesData}\r\n          selectTime={setSelected}\r\n          selected={selected}\r\n        />\r\n      </div>\r\n      <div className=\"stats-container grid\">\r\n        {data.map((item) => {\r\n          return (\r\n            <Stats\r\n              title={item.title}\r\n              timeframes={item.timeframes}\r\n              selected={selected}\r\n              key={item.title}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import \"./styles.css\";\r\nimport Dashboard from \"./Components/dashboard\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard />\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}